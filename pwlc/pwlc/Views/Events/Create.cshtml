@model pwlc.Models.Event

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Patient.PatientId)
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.eventId)
        @*<div class="form-group">
                @Html.LabelFor(model => model.eventId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.eventId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.eventId, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.title)
        @*<div class="form-group">
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.description)
        @*<div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.start, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.start, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.start, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <label class="control-label  col-md-2">Start Date</label>
            <div class="col-md-10">
                <input type="date" name="StartDate" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Start Time</label>
            <div class="col-md-10">
                <input type="time" name="StartTime" />
            </div>
        </div>
        @Html.HiddenFor(model => model.end)
        @*<div class="form-group">
                @Html.LabelFor(model => model.end, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.end, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.end, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.color)
        @*<div class="form-group">
                @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.borderColor)
        @*<div class="form-group">
                @Html.LabelFor(model => model.borderColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.borderColor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.borderColor, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.HiddenFor(model => model.textColor)
        @*<div class="form-group">
                @Html.LabelFor(model => model.textColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.textColor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.textColor, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTypeId, "AppointmentTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppointmentTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AppointmentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.AppointmentType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>